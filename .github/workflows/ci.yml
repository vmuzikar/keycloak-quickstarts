name: Quickstarts tests

on:
  repository_dispatch:
    types: [ kc_push ]
  push:
  pull_request:

env:
  WORKFLOW_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

jobs:
  tests:
    name: Quickstarts tests
    runs-on: ubuntu-latest
    steps:
      - name: Update check run in KC repo with in_progress status
        if: ${{ github.event_name == 'repository_dispatch' }}
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/${{ github.event.client_payload.repo }}/dispatches
          event_type: qs_update
          client_payload: |
            status: in_progress
            workflow_url: ${{ env.WORKFLOW_URL }}
            checkrun_url: ${{ github.event.client_payload.check_run_url }}
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}

      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - run: |
          cp -f maven-settings.xml ~/.m2/settings.xml
          .github/scripts/generate-keycloak-json.sh

      - name: Cache Maven repo
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/org/keycloak
          key: cache-1-${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: cache-1-${{ runner.os }}-m2

      - name: Get Keycloak
        run: .github/scripts/prepare-local-server.sh

      - name: Build Quickstarts
        run: |
          mvn clean install -DskipTests -B
          cp authz-js-policies/target/authz-js-policies.jar keycloak-dist/standalone/deployments

      - name: Start Keycloak
        run: .github/scripts/start-local-server.sh

      - name: Run tests
        id: tests
        run: .github/scripts/run-tests.sh

      - name: Archive logs
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: test-logs
          retention-days: 2
          path: |
            test-logs
            keycloak.log

      - uses: haya14busa/action-cond@v1
        id: tests_result
        if: ${{ always() }}
        with:
          cond: ${{ steps.tests.conclusion == 'success' }}
          if_true: "success"
          if_false: "failure"

      - name: Update check run in KC repo with final conclusion
        if: ${{ always() && github.event_name == 'repository_dispatch' }}
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/${{ github.event.client_payload.repo }}/dispatches
          event_type: qs_update
          client_payload: |
            status: completed
            conclusion: ${{ steps.tests_result.outputs.value }}
            workflow_url: ${{ env.WORKFLOW_URL }}
            checkrun_url: ${{ github.event.client_payload.check_run_url }}
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}